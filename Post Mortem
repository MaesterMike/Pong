I made a very basic, yet fully functional Pong game for two players. I started my project by using the template that was given to us students the day it was assigned, and I went on from there. 

I had a premade header file named “sfwdraw.h” that was used to do many things in the program, like quit out the window, recognize which key was pressed, and also drew the lines at the borders of the screen. At first, the program was a convoluted mess, as I had lengthy functions used to calculate the top and bottom points of the player paddles, their velocities, and collision. It wasn’t until I learned how to use things like structures and multiple source and header files properly that the code became more readable. I used structures to allocate the speed, accuracy, velocity, and displacements of the player paddles and ball, and had made multiple source files to draw the player paddles as translucent rectangles and to add collision to them (the collision function used a bool), making the program a lot less cluttered and much easier to read. I had used for loops at various points in the program, mostly to draw things on the screen, like the miniature balls to represent the score, as well as the dashes to separate the screen into halves. Most of my code took place in a while loop and used a bool to check if the program was running.

I encountered a lot of challenges while making this game, but one of the biggest I faced was trying to figure out how to quit out of the game window without quitting out of the output window as well. I needed help for this, so one of the teachers helped me implement an if statement that was nested in another if statement that checked if the ball had left the left and right sides of the screen. This if statement would quit out of the game window once one player reached a certain score, and would then check if I had pressed a certain key so that the program would either quit or restart.

Unfortunately, most of the original code that is used in the program I didn’t create on my own, but got help from both students and teachers, as my understanding of C++ isn’t very strong. I had a lot of trouble remembering how to use structures, loops, bools, and other things correctly, and ended up getting lots of help. In fact, the for loop that drew the dashed lines through the center of the screen I had used from someone else’s program (he gave me permission to use it). There were also some things I would have liked to have implemented, but never got around to it. One of them being a random number generator to launch the ball in a random direction each time instead of just one.

However, I was able to figure out some things on my own. I learned how to get the ball to rebound off of the top and bottom walls, and when it went offscreen on the left and right sides, I made it reappear in the center of the screen where it had started from. Also, at first, I had the ball launch with the spacebar when it was pressed. But when it was going in a direction other than the initial one set to the ball’s velocity, pressing the spacebar again would relaunch it in it’s initial direction, making it very exploitable. I fixed this by checking if the ball’s velocity was equal to zero. If it wasn’t, then pressing spacebar after launching the ball would do nothing.

The Pong project was a challenge, but I feel it was a good learning experience. I feel like I gained a much better understanding of the C++ language, and while it will still take a time before I completely master it, I felt like I gained a much better understanding of how the language works. I will definitely go back to this program from time to time to see if it will give me some inspirations for later projects.
